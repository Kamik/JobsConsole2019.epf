{3,
{49,0,1,0,0,1,0,0,00000000-0000-0000-0000-000000000000,0,
{1,0},0,0,1,1,1,0,3,0,
{3,1d632984-de3c-4b4b-ad9f-d69682a10182,"ОбработкаВыбора",3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",1,0,1d632984-de3c-4b4b-ad9f-d69682a10182,0,1,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1},
{0},1,
{22,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,2,0},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{29,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СохранитьИЗакрыть",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,1,0,0,2,1,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",0,0,1,
{11,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СохранитьИЗакрытьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{46,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ФормаГруппаИзменитьФорму",
{1,2,
{"ru","Изменить форму (группа)"},
{"en","Change form (group)"}
},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{29,
{48,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ФормаИзменитьФорму",
{1,0},1,
{0,198ea630-fda2-4cda-8a23-f999f4c67ee6},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{11,
{49,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаИзменитьФормуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0},1,0,1,
{11,
{47,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаГруппаИзменитьФормуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{29,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"Закрыть",
{1,1,
{"en","Cancel"}
},1,
{0,3772996b-41f4-4c47-a5a8-ea397db424ae},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{11,
{27,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗакрытьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0},1,0,0,0,3,3,0},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{30,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаКоманднаяПанельСписок",
{1,2,
{"ru","Командная панель (группа)"},
{"en","Command panel (group)"}
},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1,
{3,4,
{0}
},0,2,0,1},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{29,
{32,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"Подбор",
{1,0},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{11,
{33,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПодборРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{36,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КоманднаяПанельСписок",
{1,2,
{"ru","Командная панель (список)"},
{"en","Command panel (list)"}
},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0,
{1,02023637-7868-4a5f-8576-835a76e0c9ba}
},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{42,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"СписокПереместить",
{1,2,
{"ru","Список переместить"},
{"en","Move list"}
},
{1,2,
{"ru","Список переместить"},
{"en","Move list"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,2},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{29,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СписокПереместитьВверх",
{1,0},1,
{1,37740564-9e86-44a0-bea9-3f485a5a3f91},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{11,
{39,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокПереместитьВверхРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{29,
{40,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СписокПереместитьВниз",
{1,0},1,
{1,fa51b106-eae6-44c7-8054-76cbb3100603},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{11,
{41,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокПереместитьВнизРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0,0},1,0,1,
{11,
{43,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокПереместитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},1,0,1,
{11,
{37,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КоманднаяПанельСписокРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},1,0,1,
{11,
{31,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКоманднаяПанельСписокРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},143c00f7-a42d-4cd7-9189-88e4467dc768,
{54,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"Список",0,0,0,
{1,2,
{"ru","Список"},
{"en","List"}
},
{1,0},
{1,
{2}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,1,2,2,1,1,0,0,1,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,13,
{"U"},
{4,01d80ddd-dce5-4db3-beb5-f63c97cb05b9,"СписокПриОкончанииРедактирования",60edb81d-887b-478e-94ee-7fef2b13393d,"СписокПриАктивизацииСтроки",b3c10170-c5ff-4cba-b537-679e1c872b45,"СписокПриНачалеРедактирования",fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СписокПриИзменении",1,0,01d80ddd-dce5-4db3-beb5-f63c97cb05b9,0,1,60edb81d-887b-478e-94ee-7fef2b13393d,0,1,b3c10170-c5ff-4cba-b537-679e1c872b45,0,1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},
{0},1,
{22,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СписокКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{22,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"СписокКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{34,
{4,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"СписокЗначение",1,0,
{1,0},
{1,0},
{2,
{2},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,2,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{4,178a97c4-0ffe-4fcc-93e6-505369939da5,"СписокЗначениеАвтоПодбор",1960479b-4d89-4eba-8b39-0aa802020558,"СписокЗначениеНачалоВыбора",b50dc41b-c15a-4ebe-a17f-d01e51c47de6,"СписокЗначениеОчистка",f72043b8-2d79-414e-bc4e-3972fe9dbca1,"СписокЗначениеОбработкаВыбора",1,0,178a97c4-0ffe-4fcc-93e6-505369939da5,0,1,1960479b-4d89-4eba-8b39-0aa802020558,0,1,b50dc41b-c15a-4ebe-a17f-d01e51c47de6,0,1,f72043b8-2d79-414e-bc4e-3972fe9dbca1,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{22,
{5,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СписокЗначениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{11,
{18,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокЗначениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},3,3,0},2,2,1,0,
{"Pattern"},"","",0,2,0,1,
{11,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},1,1,1,1,
{5,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{22,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СписокСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{11,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},2,
{1,0},0,3,3,0},1,
{5,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"СписокСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{22,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СписокСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{11,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},2,
{1,1},0,3,3,0},1,
{5,
{15,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"СписокУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{22,
{16,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СписокУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,
{11,
{17,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},2,
{1,2},0,3,3,0},0,1,0,0,1,0,3,3,0,1,0,0,0,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{22,
{50,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"БиблиотекаКартинок",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{28,1,0,0,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2,
{3,4,
{0}
},0,2,0,2},1,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{11,
{52,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"БиблиотекаКартинокУКО_ТипТип",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{3,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAYdEVYdFNvZnR3
YXJlAHBhaW50Lm5ldCA0LjAuNvyMY98AAABoSURBVDhPY/j//z8DJZgizSCLB6EB
mpqa/52dHLFikBx6eGF4wczMFKTZG6QwNjbyPwiD2CAxkBxBA2Ca0Q2AGULQAGQF
yC7AFdV4Y2EkGwCKiYryov+geAdhEBs5dpADdBAmZVKzNgDOWtNtpSsLpgAAAABJ
RU5ErkJggg==}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},0},1,
{22,
{53,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"БиблиотекаКартинокУКО_ТипТипКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3,0},1,2,
{1,
{1,0},0},0,1,
{11,
{54,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"БиблиотекаКартинокУКО_ТипТипРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},1,0,0,1,0,3,3,0},0,0,1,
{11,
{51,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"БиблиотекаКартинокРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},"","",1,
{22,
{0},0,0,0,7,"Navigator",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,1,0,1,
{11,
{0},0,0,0,0,"NavigatorExtendedTooltip",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3,0},0,3,3,0},1,"",2,0,0,0,0,0,3,3,0,0,2,100,1,1,0,0,0,
{49,0}
},"#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	
	// Получение переданных данных
	ТекстЗаголовка = Параметры.Заголовок;
	ОписаниеТипов = Параметры.ОписаниеТипов;
	
	Если Параметры.Свойство(""Значение"") Тогда
		
		// Заполнение списка
		Для Каждого ЭлементСписка Из Параметры.Значение Цикл
			НоваяСтрока = Список.Добавить();
			НоваяСтрока.Значение = ЭлементСписка.Значение;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	НайденныеСтроки = Список.НайтиСтроки(Новый Структура(""Значение"", ВыбранноеЗначение));
	
	Если НайденныеСтроки.Количество() = 0 Тогда
		
		НоваяСтрока = Список.Добавить();
		НоваяСтрока.Значение = ВыбранноеЗначение;
		
		ТекстОповещения = СтрШаблон(НСтр(""ru = 'В список добавлено: %1'; en = 'Added to list: %1'""), ВыбранноеЗначение);
		ПоказатьОповещениеПользователя(УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения(),,ТекстОповещения);
		
		ОбновитьЗаголовок();
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриИзменении(Элемент)
	
	Модифицированность = Истина;
	ОбновитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УКО_ФормыКлиент_АктивизацияСтрокиЗначенияПараметраВФорме(Элементы.СписокЗначение, ТекущиеДанные.Значение, ОписаниеТипов, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		УКО_ФормыКлиент_АктивизацияСтрокиЗначенияПараметраВФорме(Элементы.Список.ТекущийЭлемент, Элементы.Список.ТекущиеДанные.Значение, ОписаниеТипов, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ОбновитьЗаголовок();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗначениеОчистка(Элемент, СтандартнаяОбработка)
	
	УКО_ФормыКлиент_ОчисткаЗначенияПараметраВФорме(Элемент, СтандартнаяОбработка);
	УКО_ФормыКлиент_АктивизацияСтрокиЗначенияПараметраВФорме(Элемент, Неопределено, ОписаниеТипов, Истина);

КонецПроцедуры

&НаКлиенте
Процедура СписокЗначениеОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	УКО_ФормыКлиент_ОбработкаВыбораЗначенияПараметраВФорме(Элемент, ВыбранноеЗначение, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	ЗначениеПараметра = ТекущиеДанные.Значение;
	
	ДополнительныеПараметры = Новый Структура;
	ОписаниеОповещенияЗавершение = Новый ОписаниеОповещения(""ВводЗначенияПараметраЗавершен"", ЭтаФорма, ДополнительныеПараметры);
	УКО_ФормыКлиент_ВводЗначенияПараметраВФорме("""", Элемент, ЗначениеПараметра, ОписаниеТипов, СтандартнаяОбработка, ОписаниеОповещенияЗавершение, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокЗначениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	
	УКО_ФормыКлиент_АвтоПодборЗначенияВФорме(Текст, ОписаниеТипов, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьИЗакрыть(Команда)

	НовоеЗначение = Новый СписокЗначений;
	Для Каждого Строка Из Список Цикл
		НовоеЗначение.Добавить(Строка.Значение);
	КонецЦикла;
	
	Закрыть(НовоеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура Подбор(Команда)
	
	Если ОписаниеТипов.СодержитТип(Тип(""Тип"")) Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения(""ПодбораТипаБезОбработки"", ЭтаФорма, ДополнительныеПараметры);
		УКО_ФормыКлиент_ОткрытьРедактированиеТипа("""", Неопределено, ЭтаФорма, ОписаниеОповещенияОЗавершении, Истина, Ложь);
		
	Иначе 
		
		КоличествоСсылочныхТипов = УКО_ОбщегоНазначенияКлиентСервер_КоличествоСсылочныхТипов(ОписаниеТипов);
		
		Если КоличествоСсылочныхТипов = 0 Тогда //Нет типов для подбора
			
			ПоказатьПредупреждение(, НСтр(""ru = 'Для данного типа значений подбор недоступен'; en = 'Selection is not available for this type of value'""),,УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения());
			
		ИначеЕсли КоличествоСсылочныхТипов = 1 Тогда //один тип, сразу открываем форму подбора
			
			ОткрытьФормуДляПодбора (УКО_ОбщегоНазначенияКлиентСервер_ПервыйСсылочныйТипОписание(ОписаниеТипов));
			
		Иначе //несколько типов нужно выбрать
			
			ДополнительныеПараметры = Новый Структура;
			ОписаниеОповещенияОЗавершении = Новый ОписаниеОповещения(""ПослеВыбораТипаДляПодбора"", ЭтаФорма, ДополнительныеПараметры);
			УКО_ФормыКлиент_ОткрытьРедактированиеТипа(НСтр(""ru = 'подбора'; en = 'selection'""), УКО_ОбщегоНазначенияКлиентСервер_СсылочныеТипы(ОписаниеТипов), ЭтаФорма, ОписаниеОповещенияОЗавершении, Истина);
			
		КонецЕсли;
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьЗаголовок()
	
	УКО_ФормыКлиентСервер_Заголовок(ЭтаФорма, СтрШаблон(НСтр(""ru = 'Редактирование списка значений %1: (%2)'; en = 'Editing the list of %1 values: (%2)'""),
														ТекстЗаголовка, Список.Количество()));
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуДляПодбора (ОписаниеТипов)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить(""ЗакрыватьПриВыборе"", Ложь);
	ПараметрыФормы.Вставить(""ВыборГруппИЭлементов"", ИспользованиеГруппИЭлементов.ГруппыИЭлементы);

	ОткрытьФорму(ПолучитьИмяФормыВыбора(Новый (УКО_ОбщегоНазначенияКлиентСервер_ПервыйСсылочныйТип(ОписаниеТипов))),ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеВыбораТипаДляПодбора(Результат, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(Результат) Тогда
		ОткрытьФормуДляПодбора (Результат);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПодбораТипаБезОбработки(Результат, ДополнительныеПараметры) Экспорт
	
	НичегоНеДелаем = Истина;

КонецПроцедуры

&НаКлиенте
Процедура ВводЗначенияПараметраЗавершен(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	Если ДополнительныеПараметры.ВыборЗначенияТип Тогда
		
		НовоеЗначение = Результат;
		
	Иначе
		
		ЭлементЗначениеПараметра = Элементы.Список.ТекущийЭлемент;
		ЭлементЗначениеПараметра.ОграничениеТипа = Результат;
		ЭлементЗначениеПараметра.ВыбиратьТип = Ложь;
		
		НовоеЗначение = Результат.ПривестиЗначение(Неопределено);
		
		УКО_ФормыКлиент_АктивизацияСтрокиЗначенияПараметраВФорме(Элементы.СписокЗначение, НовоеЗначение, ОписаниеТипов, Истина);
		
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	ТекущиеДанные.Значение = НовоеЗначение;

КонецПроцедуры

&НаСервере
Функция ПолучитьИмяФормыВыбора(Ссылка)
    Возврат Ссылка.Метаданные().ПолноеИмя() + "".ФормаВыбора"";
КонецФункции

#КонецОбласти


&НаСервере
Функция ОбъектОбработки()
	Возврат РеквизитФормыВЗначение(""Объект"");
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает имя расширения
// Возвращаемое значение:
//   Строка	- Имя расширения
Функция УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения() Экспорт 
	
	Возврат НСтр(""ru = 'Управляемая консоль отчетов'; en = 'Managed reporting console'"");
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает первый ссылочный тип описание содержащийся в описании типов
//
// Параметры:
//   ОписаниеТипов - ОписаниеТипов - Описание типов
//
// Возвращаемое значение:
//   ОписаниеТипов - Описание первый ссылочный тип
//
Функция УКО_ОбщегоНазначенияКлиентСервер_ПервыйСсылочныйТипОписание(ОписаниеТипов) Экспорт 
	
	Количество = 0;
	Для Каждого Тип Из ОписаниеТипов.Типы() Цикл 
		
		Если Не УКО_ОбщегоНазначенияКлиентСервер_ЭтоПростойТип(Тип) Тогда
			
			Типы = Новый Массив;
			Типы.Добавить(Тип);
			
			Возврат Новый ОписаниеТипов(Типы); 
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает первый ссылочный тип содержащийся в описании типов
//
// Параметры:
//   ОписаниеТипов - ОписаниеТипов - Описание типов
//
// Возвращаемое значение:
//   Тип - Первый ссылочный тип
//
Функция УКО_ОбщегоНазначенияКлиентСервер_ПервыйСсылочныйТип(ОписаниеТипов) Экспорт 
	
	Количество = 0;
	Для Каждого Тип Из ОписаниеТипов.Типы() Цикл 
		
		Если Не УКО_ОбщегоНазначенияКлиентСервер_ЭтоПростойТип(Тип) Тогда
			Возврат Тип; 
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции
&НаКлиенте
// Обработка активизации строки параметра в форме
//
// Параметры:
//	Элемент - ЭлементФормы - Элемент формы
//	Значение - Произвольный - Значение параметра
//	ОписаниеТипов - ОписаниеТипов - Описание типов параметра
//	РедактированиеСписка - Булево - Редактирование производится в списке
//
Процедура УКО_ФормыКлиент_АктивизацияСтрокиЗначенияПараметраВФорме(Элемент, Значение, Знач ОписаниеТипов, РедактированиеСписка = Ложь) Экспорт
	
	РедактированиеТекста = Ложь;
	КнопкаВыбора = Истина;
	КнопкаОчистки = Истина;
	КнопкаВыпадающегоСписка = Ложь;
	ОграничениеТипа = Ложь;
	Элемент.СписокВыбора.Очистить();
	
	ЗначениеСписок = (ТипЗнч(Значение) = Тип(""СписокЗначений""));
	СложноеЗначение = (ТипЗнч(Значение) = Тип(""Структура""));
	Если ТипЗнч(ОписаниеТипов) = Тип(""ОписаниеТипов"") Тогда
		СоставнойТип = ОписаниеТипов.Типы().Количество() <> 1;
	Иначе
		СоставнойТип = Ложь;
	КонецЕсли;
	
	ПроверяемоеЗначение = УКО_ФормыКлиент_ПроверяемоеЗначениеПараметра(Значение, ОписаниеТипов);
	
	Если СоставнойТип Тогда
		ВыбиратьТип = (ПроверяемоеЗначение = Неопределено) И НЕ ЗначениеСписок;
	Иначе
		ВыбиратьТип = Ложь;
	КонецЕсли;
	
	Если ТипЗнч(ПроверяемоеЗначение) = Тип(""МоментВремени"") Тогда
		
		Элемент.ОграничениеТипа = УКО_ОбщегоНазначенияКлиентСервер_ОписаниеТиповСтрока();
		
	ИначеЕсли ТипЗнч(ПроверяемоеЗначение) = Тип(""Граница"") Тогда
		
		Элемент.ОграничениеТипа = УКО_ОбщегоНазначенияКлиентСервер_ОписаниеТиповСтрока();
		
	ИначеЕсли ТипЗнч(ПроверяемоеЗначение) = Тип(""Тип"") Тогда
		
		Элемент.ОграничениеТипа = УКО_ОбщегоНазначенияКлиентСервер_ОписаниеТиповСтрока();
		КнопкаОчистки = Ложь;
		
	ИначеЕсли ТипЗнч(ПроверяемоеЗначение) = Тип(""УникальныйИдентификатор"") Тогда
		
		КнопкаОчистки = Ложь;
		ОграничениеТипа = Истина;
		
	ИначеЕсли ТипЗнч(ПроверяемоеЗначение) = Тип(""Булево"")
			ИЛИ ТипЗнч(ПроверяемоеЗначение) = Тип(""ВидДвиженияНакопления"")
			ИЛИ ТипЗнч(ПроверяемоеЗначение) = Тип(""ВидДвиженияБухгалтерии"")
			ИЛИ ТипЗнч(ПроверяемоеЗначение) = Тип(""ВидСчета"") Тогда
		
		КнопкаОчистки = Ложь;
		КнопкаВыбора = Ложь;
		КнопкаВыпадающегоСписка = Истина;
		ОграничениеТипа = Истина;
		
	ИначеЕсли ТипЗнч(ПроверяемоеЗначение) = Тип(""Строка"")
			ИЛИ ТипЗнч(ПроверяемоеЗначение) = Тип(""Число"") Тогда
		
		РедактированиеТекста = Истина;
		ОграничениеТипа = Истина;
		КнопкаВыбора = Ложь;
		КнопкаВыпадающегоСписка = Ложь;
		
	ИначеЕсли ТипЗнч(ПроверяемоеЗначение) = Тип(""Дата"") Тогда
		
		ОграничениеТипа = Истина;
		РедактированиеТекста = Истина;
		КнопкаВыпадающегоСписка = Истина;
		
		Если Не ЗначениеСписок Тогда
			Элемент.СписокВыбора.Добавить(Новый Структура(""Тип"", ""ТекущаяДата""), СтрШаблон(НСтр(""ru = 'Текущая дата, время (%1 ..)'; en = 'Current date, time (%1 ..)'""), Формат(ТекущаяДата(), ""ДЛФ=D"")));
		КонецЕсли;
		
	ИначеЕсли СложноеЗначение Тогда
		
		КнопкаОчистки = Ложь;
		
	Иначе
		
		ОграничениеТипа = Истина;
		РедактированиеТекста = Истина;
		КнопкаВыпадающегоСписка = Не ВыбиратьТип;
		
	КонецЕсли;
	
	Если ВыбиратьТип И ПроверяемоеЗначение = Неопределено Тогда
		КнопкаОчистки = Ложь;
	Иначе
		КнопкаОчистки = КнопкаОчистки ИЛИ СоставнойТип;
	КонецЕсли;
		
	Элемент.КнопкаОчистки = КнопкаОчистки;
	Элемент.КнопкаВыбора = КнопкаВыбора;
	Элемент.КнопкаВыпадающегоСписка = КнопкаВыпадающегоСписка;
	Элемент.РедактированиеТекста = РедактированиеТекста;
	Элемент.ВыбиратьТип = ВыбиратьТип;
	
	Если ВыбиратьТип Тогда
		Элемент.КартинкаКнопкиВыбора = Элементы.БиблиотекаКартинокУКО_ТипТип.Картинка;
	Иначе
		Элемент.КартинкаКнопкиВыбора = Новый Картинка;
	КонецЕсли;
	
	Если ОграничениеТипа Тогда
		Элемент.ОграничениеТипа = ОписаниеТипов;
	КонецЕсли;
	
КонецПроцедуры
&НаКлиентеНаСервереБезКонтекста
// Возвращает количество ссылочных типов содержащихся в описании типов
//
// Параметры:
//   ОписаниеТипов - ОписаниеТипов - Описание типов
//
// Возвращаемое значение:
//   Число - Количество ссылочных типов 
//
Функция УКО_ОбщегоНазначенияКлиентСервер_КоличествоСсылочныхТипов(ОписаниеТипов) Экспорт 
	
	Количество = 0;
	Для Каждого Тип Из ОписаниеТипов.Типы() Цикл 
		
		Если Не УКО_ОбщегоНазначенияКлиентСервер_ЭтоПростойТип(Тип) Тогда
			Количество = Количество + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Количество;
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Проверяет это простой тип
//
// Параметры:
//   Тип - Тип - Тип
//
// Возвращаемое значение:
//   Булево - Если тип простой
//
Функция УКО_ОбщегоНазначенияКлиентСервер_ЭтоПростойТип(Тип)
	
	Результат = Тип = Тип(""Null"") ИЛИ Тип = Тип(""Неопределено"") ИЛИ Тип = Тип(""Число"") ИЛИ Тип = Тип(""Строка"") ИЛИ Тип = Тип(""Дата"") ИЛИ Тип = Тип(""Булево"") 
				ИЛИ Тип = Тип(""УникальныйИдентификатор"") ИЛИ Тип = Тип(""ХранилищеЗначения"") ИЛИ Тип = Тип(""Тип"") ИЛИ Тип = Тип(""МоментВремени"") ИЛИ Тип = Тип(""Структура"") ИЛИ Тип = Тип(""ОписаниеТипов"");
				
	#Если Сервер Тогда
		Результат = Результат ИЛИ Тип = Тип(""РезультатЗапроса"");
	#КонецЕсли
	
	Возврат Результат;
	
КонецФункции
&НаКлиенте
// Открывает форму редактирования Уникального идентификатора
//
// Параметры:
//	Заголовок - Строка - Заголовок
//	Значение - УникальныйИдентификатор - Уникальный идентификатор
//	Владелец - Форма/Элемент - Владелец
//	ОписаниеОповещенияЗавершение - ОписаниеОповещения - Описание оповещения при завершении
//
Процедура УКО_ФормыКлиент_ОткрытьРедактированиеУникальногоИдентификатора(Заголовок, Значение, Владелец, ОписаниеОповещенияЗавершение) Экспорт
	
	ПараметрыФормы = Новый Структура(""Заголовок, Значение"", Заголовок, Значение);
	УКО_ФормыКлиент_ОткрытьДополнительную(""РедактированиеУникальногоИдентификатора"", ПараметрыФормы, Владелец,, ОписаниеОповещенияЗавершение);
	
КонецПроцедуры
&НаКлиенте
// Обработка очистки значения параметра в форме
//
// Параметры:
//	Элемент - ЭлементФормы - Элемент формы
//	СтандартнаяОбработка - Булево - Стандартная обработка
//
Процедура УКО_ФормыКлиент_ОчисткаЗначенияПараметраВФорме(Элемент, СтандартнаяОбработка) Экспорт
	
	Если Элемент.КнопкаОчистки = Ложь Тогда
		Элемент.ВыбиратьТип = Истина;
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры
&НаКлиентеНаСервереБезКонтекста
// Возвращает ссылочные типы
//
// Параметры:
//   ОписаниеТипов - ОписаниеТипов - Описание типов
//
// Возвращаемое значение:
//   Массив - Ссылочные типы
//
Функция УКО_ОбщегоНазначенияКлиентСервер_СсылочныеТипы(ОписаниеТипов) Экспорт
	
	Типы = Новый Массив;
	Для Каждого Тип Из ОписаниеТипов.Типы() Цикл 
		
		Если Не УКО_ОбщегоНазначенияКлиентСервер_ЭтоПростойТип(Тип) Тогда
			Типы.Добавить(Тип); 
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Новый ОписаниеТипов(Типы);
	
КонецФункции
&НаКлиенте
// Обработка выбора значения параметра в форме
//
// Параметры:
//	Заголовок - Строка - Заголовок
//	Элемент - Элемент - Элемент
//	Значение - Произвольный - Значение параметра
//	ОписаниеТипов - ОписаниеТипов - Описание типов параметра
//	СтандартнаяОбработка - Булево - Стандартная обработка
//	ОписаниеОповещенияЗавершение - ОписаниеОповещения - Описание оповещения (завершение)
//	РедактированиеСписка - Булево - Редактирование списка
//
Процедура УКО_ФормыКлиент_ВводЗначенияПараметраВФорме(Заголовок, Элемент, Значение, ОписаниеТипов, СтандартнаяОбработка, ОписаниеОповещенияЗавершение, РедактированиеСписка = Ложь) Экспорт
	
	Если ТипЗнч(Значение) = Тип(""СписокЗначений"") Тогда
		Возврат;
	КонецЕсли;
	
	ПроверяемоеЗначение = УКО_ФормыКлиент_ПроверяемоеЗначениеПараметра(Значение, ОписаниеТипов);
	
	Если ТипЗнч(ПроверяемоеЗначение) = Тип(""Тип"") Тогда
		
		УКО_ФормыКлиент_ОткрытьРедактированиеТипа(Заголовок, Значение, Элемент, ОписаниеОповещенияЗавершение, Истина);

	ИначеЕсли ТипЗнч(ПроверяемоеЗначение) = Тип(""УникальныйИдентификатор"") Тогда
		
		УКО_ФормыКлиент_ОткрытьРедактированиеУникальногоИдентификатора(Заголовок, Значение, Элемент, ОписаниеОповещенияЗавершение);
		
	ИначеЕсли Элемент.ВыбиратьТип Тогда
		
		СтандартнаяОбработка = Ложь;
		
		Если РедактированиеСписка Тогда
			ОписаниеИсключаемыхТипов = Новый ОписаниеТипов(""Граница, МоментВремени"");
		Иначе
			ОписаниеИсключаемыхТипов = Неопределено;
		КонецЕсли;
		
		УКО_ФормыКлиент_ОткрытьРедактированиеТипа(Заголовок, ОписаниеТипов, Элемент, ОписаниеОповещенияЗавершение,,,ОписаниеИсключаемыхТипов);
		
	КонецЕсли;

КонецПроцедуры
&НаКлиенте
// Открывает дополнительную/вспомогательную форму
//
// Параметры:
//	Имя - Строка - Имя формы
//	Параметры - Структура - Параметры формы (необязательный)
//	Владелец - Форма - Форма владелец
//	Уникальность - Произвольный - Уникальность (необязательный)
//	ОписаниеОповещенияОЗакрытии - ОписаниеОповещения - Описание оповещения о закрытии (необязательный)
//
Процедура УКО_ФормыКлиент_ОткрытьДополнительную(Имя, Параметры = Неопределено, Владелец = Неопределено, Уникальность = Неопределено, ОписаниеОповещенияОЗакрытии = Неопределено) Экспорт
	
	Если УКО_ОбщегоНазначенияКлиентСервер_РежимЗапускаВнешняяОбработка() Тогда
		ОбъектФорм = СтрШаблон(""ВнешняяОбработка.%1%2.Форма."", УКО_ОбщегоНазначенияКлиентСервер_ПрефиксРасширения(), УКО_ОбщегоНазначенияКлиентСервер_ИдентификаторРасширения());
	Иначе
		ОбъектФорм = ""ОбщаяФорма"";
	КонецЕсли;
	
	ПолноеИмяФормы = СтрШаблон(""%1.%2%3"", ОбъектФорм, УКО_ОбщегоНазначенияКлиентСервер_ПрефиксРасширения(), Имя);
	
	Если Владелец = Неопределено Тогда
		РежимОткрытия = Неопределено;
	Иначе 
		РежимОткрытия = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	КонецЕсли;
	
	ОткрытьФорму(ПолноеИмяФормы, Параметры, Владелец, Уникальность,,,ОписаниеОповещенияОЗакрытии, РежимОткрытия);
	
КонецПроцедуры
&НаКлиентеНаСервереБезКонтекста
// Возвращает идентификатор расширения
// Возвращаемое значение:
//   Строка	- Идентификатор расширения
Функция УКО_ОбщегоНазначенияКлиентСервер_ИдентификаторРасширения() Экспорт 
	
	Возврат ""УправляемаяКонсольОтчетов"";
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Возвращает префикс объектов расширения
// Возвращаемое значение:
//   Строка	- Префикс объектов расширения
Функция УКО_ОбщегоНазначенияКлиентСервер_ПрефиксРасширения() Экспорт 
	
	Возврат ""УКО_"";
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Определяет, это режим запуска программы
//
// Возвращаемое значение:
//   Булево	- Истина, Режим запуска внешняя обработка
//
Функция УКО_ОбщегоНазначенияКлиентСервер_РежимЗапускаВнешняяОбработка() Экспорт
	
	Возврат Истина;
	
КонецФункции
&НаКлиенте
// Открывает форму выбора типа
//
// Параметры:
//	Заголовок - Строка - Заголовок
//	Значение - Произвольный/ОписаниеТипов - Значение
//	Владелец - Форма/Элемент - Владелец
//	ОписаниеОповещенияЗавершение - ОписаниеОповещения - Описание оповещения при завершении
//	ВыборЗначенияТип - Булево - Выбор значения Тип
//	ЗакрыватьПриВыборе - Булево - Закрывать при выборе
//	ОписаниеИсключаемыхТипов - ОписаниеТипов - Описание исключаемых типов
//
Процедура УКО_ФормыКлиент_ОткрытьРедактированиеТипа(Заголовок, Значение, Владелец, ОписаниеОповещенияЗавершение, ВыборЗначенияТип = Ложь, ЗакрыватьПриВыборе = Истина, ОписаниеИсключаемыхТипов = Неопределено) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить(""Заголовок"", Заголовок);
	ПараметрыФормы.Вставить(""Значение"", Значение);
	ПараметрыФормы.Вставить(""ЗакрыватьПриВыборе"", ЗакрыватьПриВыборе);
	
	Если ОписаниеИсключаемыхТипов = Неопределено Тогда
		ОписаниеИсключаемыхТипов = Новый ОписаниеТипов;
	КонецЕсли;
	ПараметрыФормы.Вставить(""ОписаниеИсключаемыхТипов"", ОписаниеИсключаемыхТипов);
	
	ОписаниеОповещенияЗавершение.ДополнительныеПараметры.Вставить(""ВыборЗначенияТип"", ВыборЗначенияТип);
	
	УКО_ФормыКлиент_ОткрытьДополнительную(""РедактированиеТипа"", ПараметрыФормы, Владелец,, ОписаниеОповещенияЗавершение);
	
КонецПроцедуры
&НаКлиентеНаСервереБезКонтекста
// Возвращает Описание типов строка)
// Параметры:
//   ДлинаСтроки - Число - Длина строки
// Возвращаемое значение:
//   ОписаниеТипов - Описание типов строка
Функция УКО_ОбщегоНазначенияКлиентСервер_ОписаниеТиповСтрока(ДлинаСтроки = 0) Экспорт
	
	Возврат Новый ОписаниеТипов(""Строка"", , Новый КвалификаторыСтроки(ДлинаСтроки));
	
КонецФункции
&НаКлиенте

Функция УКО_ФормыКлиент_ПроверяемоеЗначениеПараметра(Значение, ОписаниеТипов)
	
	Если ТипЗнч(Значение) = Тип(""Структура"")
			ИЛИ ТипЗнч(Значение) = Тип(""МоментВремени"")
			ИЛИ ТипЗнч(Значение) = Тип(""Граница"")
			ИЛИ ОписаниеТипов = ""Перечисление.УКО_СложныйПараметрЗапроса.ТаблицаЗначений"" Тогда
		Результат = Значение;
	Иначе
		Результат = ОписаниеТипов.ПривестиЗначение(Значение);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
&НаКлиенте
// Обработка выбора значения параметра в форме
//
// Параметры:
//	Элемент - ЭлементФормы - Элемент формы
//	ВыбранноеЗначение - Произвольный - Выбранное значение
//	СтандартнаяОбработка - Булево - Стандартная обработка
//
Процедура УКО_ФормыКлиент_ОбработкаВыбораЗначенияПараметраВФорме(Элемент, ВыбранноеЗначение, СтандартнаяОбработка) Экспорт
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип(""Структура"") Тогда
		
		Если ВыбранноеЗначение.Тип = ""ТекущаяДата"" Тогда
			
			ВыбранноеЗначение = ТекущаяДата();
			
		ИначеЕсли ВыбранноеЗначение.Тип = ""ОсобаяСсылка"" Тогда
			
			ВыбранноеЗначение = ВыбранноеЗначение.Ссылка;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиенте
// Обработка автоподбора значения в форме
//
// Параметры:
//	Текст - Строка - Текст
//	ТипЗначения - ОписаниеТипов, Строка - Тип значения параметра
//	ДанныеВыбора - Неопределено, СписокЗначений - ДанныеВыбора
//	СтандартнаяОбработка - Булево - Стандартная обработка
//
Процедура УКО_ФормыКлиент_АвтоПодборЗначенияВФорме(Текст, ТипЗначения, ДанныеВыбора, СтандартнаяОбработка) Экспорт
	
	Если УКО_СтрокиКлиентСервер_ЭтоUID(Текст)
		ИЛИ УКО_СтрокиКлиентСервер_ЭтоПредставлениеБитаяСсылка(Текст) Тогда
		
		СтандартнаяОбработка = Ложь;
		УКО_ФормыВызовСервера_АвтоПодборЗначения(Текст, ТипЗначения, ДанныеВыбора);
		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиентеНаСервереБезКонтекста
// Проверяет является ли строка UID
//
// Параметры:
//   ПроверяемаяСтрока - Строка - Проверяемая строка
//
// Возвращаемое значение:
//   Булево - Истина, это UID
//
Функция УКО_СтрокиКлиентСервер_ЭтоUID(ПроверяемаяСтрока) Экспорт
	
	Попытка
		УникальныйИдентификатор = Новый УникальныйИдентификатор(ПроверяемаяСтрока);
		Результат = Истина;
	Исключение
		Результат = Ложь;
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Проверяет является ли строка представление битой ссылки
//
// Параметры:
//   ПроверяемаяСтрока - Строка - Проверяемая строка
//
// Возвращаемое значение:
//   Булево - Истина, представление битой ссылки
//
Функция УКО_СтрокиКлиентСервер_ЭтоПредставлениеБитаяСсылка(ПроверяемаяСтрока) Экспорт
	
	Возврат СтрНачинаетсяС(ПроверяемаяСтрока, НСтр(""ru = '<Объект не найден>'; en = '<Object not found>'""));
	
КонецФункции
&НаСервере
// Обработка автоподбора значения в форме
//
// Параметры:
//	Текст - Строка - Текст
//	ТипЗначения - ОписаниеТипов, Строка - Тип значения параметра
//	ДанныеВыбора - Неопределено, СписокЗначений - ДанныеВыбора
//
Процедура УКО_ФормыВызовСервера_АвтоПодборЗначения(Текст, ТипЗначения, ДанныеВыбора) Экспорт
	
	Если ТипЗнч(ТипЗначения) = Тип(""ОписаниеТипов"")
		И ЗначениеЗаполнено(ТипЗначения.Типы()) Тогда
		
		Тип = ТипЗначения.Типы()[0];
		Если УКО_ОбщегоНазначенияКлиентСервер_ЭтоСсылочныйТип(Тип) Тогда
			
			Если УКО_СтрокиКлиентСервер_ЭтоПредставлениеБитаяСсылка(Текст) Тогда
				
				// Получение UID битой ссылки
				Индекс = СтрНайти(Текст, "":"");
				Если ЗначениеЗаполнено(Индекс) Тогда
					
					UIDБитойСсылки = УКО_СтрокиКлиентСервер_РазборПрочитатьШестнадцатеричноеЧисло(Текст, Индекс + 1);
					Ссылка = ОбъектОбработки().УКО_ОбщегоНазначения_СсылкаПоВнутреннемуUID(UIDБитойСсылки, Тип);
					
					УКО_ФормыВызовСервера_ВставкаОсобойСсылкиВДанныеВыбора(ДанныеВыбора, Ссылка, Текст);
					
				КонецЕсли;
				
			ИначеЕсли УКО_СтрокиКлиентСервер_ЭтоUID(Текст) Тогда
				
				УникальныйИдентификаторСсылки = Новый УникальныйИдентификатор(Текст);
				Ссылка = ОбъектОбработки().УКО_ОбщегоНазначения_СсылкаПоУникальномуИдентификатору(УникальныйИдентификаторСсылки, Тип);
					
				УКО_ФормыВызовСервера_ВставкаОсобойСсылкиВДанныеВыбора(ДанныеВыбора, Ссылка, СтрШаблон(""%1 (%2)"", Ссылка, Текст));
				
			КонецЕсли;

		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры
&НаКлиентеНаСервереБезКонтекста
// Возвращает пустой UID ""00000000000000000000000000000000""
//
// Возвращаемое значение:
//   Строка - Пустой UID
//
Функция УКО_СтрокиКлиентСервер_ПустойUID() Экспорт
	
	Возврат ""00000000000000000000000000000000"";
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Проверяет это ссылочный тип
//
// Параметры:
//  Тип  - Тип - Тип
//  ИсключаяПеречисления  - Булево - Исключать перечисление из ссылочных типов
//
// Возвращаемое значение:
//   Булево - Истина, ссылочный тип
//
Функция УКО_ОбщегоНазначенияКлиентСервер_ЭтоСсылочныйТип(Тип, ИсключаяПеречисления = Ложь) Экспорт
	
	ПростойТип = УКО_ОбщегоНазначенияКлиентСервер_ЭтоПростойТип(Тип);
	Результат = Не ПростойТип;
	Если ИсключаяПеречисления Тогда 
		
		#Если Сервер Тогда
			
			Если Перечисления.ТипВсеСсылки().СодержитТип(Тип) Тогда
				Результат = Ложь;  
			КонецЕсли;
			
		#КонецЕсли
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Чтение шестнадцатеричного числа из строки
//
// Параметры:
//   Строка - Строка - Разбираемая строка
//   НачальныйИндекс - Число - Начальный индекс
//   СмещатьИндекс - Булево - Смещать индекс (по умолчанию: Истина)
//
// Возвращаемое значение:
//   Число	- Прочитанное целое число
//
Функция УКО_СтрокиКлиентСервер_РазборПрочитатьШестнадцатеричноеЧисло(Строка, НачальныйИндекс = Неопределено, СмещатьИндекс = Истина) Экспорт
	
	Если НачальныйИндекс = Неопределено Тогда
		НачальныйИндекс = 1;
	КонецЕсли;
	
	Для Индекс = НачальныйИндекс По СтрДлина(Строка) Цикл 
		
		Если Не СтрНайти(УКО_СтрокиКлиентСервер_НаборСимволовШестнадцатеричныеЦифры(), Сред(Строка, Индекс, 1)) Тогда 
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Результат = Сред(Строка, НачальныйИндекс, Индекс - НачальныйИндекс); 
	
	Если СмещатьИндекс Тогда
		НачальныйИндекс = Индекс;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста

Функция УКО_СтрокиКлиентСервер_НаборСимволовШестнадцатеричныеЦифры()
	
	Возврат ""0123456789ABCDEFabcdef"";
	
КонецФункции
&НаКлиентеНаСервереБезКонтекста
// Обновляет заголовок формы
//
// Параметры:
//  Форма - Форма - Форма
//  Заголовок - Строка - Заголовок формы
//  Дополнение - Булево - Дополнять заголовок названием расширения
//
Процедура УКО_ФормыКлиентСервер_Заголовок(Форма, Заголовок, Дополнение = Ложь) Экспорт
	
	НовыйЗаголовок = Заголовок;
	
	Если Дополнение Тогда
		НовыйЗаголовок = НовыйЗаголовок + "" : "" + УКО_ОбщегоНазначенияКлиентСервер_ИмяРасширения();
	КонецЕсли;
	
	Форма.Заголовок = НовыйЗаголовок;
	
КонецПроцедуры
&НаСервере

Процедура УКО_ФормыВызовСервера_ВставкаОсобойСсылкиВДанныеВыбора(ДанныеВыбора, Ссылка, Текст)
	
	Если ЗначениеЗаполнено(Ссылка) Тогда
		
		ДанныеСсылки = Новый Структура();
		ДанныеСсылки.Вставить(""Тип"", ""ОсобаяСсылка"");
		ДанныеСсылки.Вставить(""Ссылка"", Ссылка);
		
		ДанныеВыбора = Новый СписокЗначений;
		ДанныеВыбора.Добавить(ДанныеСсылки, Текст);
		
	КонецЕсли;
	
КонецПроцедуры
",
{4,5,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",2b9e3585-4f22-4f84-a5b8-449c5fbfab0f}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"Список",
{1,2,
{"ru","Список"},
{"en","List"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,1,
{5,1,0,"Значение",
{1,2,
{"ru","Значение"},
{"en","Value"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{3},0,"ОписаниеТипов",
{1,2,
{"ru","Описание типов"},
{"en","A description of the types"}
},
{"Pattern",
{"#",f5c65050-3bbb-11d5-b988-0050bae0a95d}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{4},0,"ИмяПараметра",
{1,0},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{5},0,"ТекстЗаголовка",
{1,0},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxvdXRwdXRQ
YXJhbWV0ZXJzLz4NCjwvU2V0dGluZ3M+}
},
{0,0},
{0,2,
{9,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СохранитьИЗакрыть",
{1,2,
{"ru","Сохранить и закрыть"},
{"en","ОК"}
},
{1,1,
{"en","ОК"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СохранитьИЗакрыть",3,0,0,
{0,0},1,0,1,0,0,1},
{9,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Подбор",
{1,2,
{"ru","Подбор"},
{"en","Selection"}
},
{1,2,
{"ru","Подбор"},
{"en","Selection"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"Подбор",3,0,0,
{0,0},1,0,1,0,0,1}
},
{0,0},
{0,0},0,0}