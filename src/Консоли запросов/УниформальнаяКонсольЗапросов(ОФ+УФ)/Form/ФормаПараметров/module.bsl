
Перем мТипДоИзменения;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ОбрезатьСообщениеОбОшибке(сообщение)
	резСообщение = сообщение;
	индРазделителя = Найти(резСообщение,":");	
	Если индРазделителя>0 Тогда
		резСообщение = Сред(резСообщение,индРазделителя+2);	
	КонецЕсли;
	индРазделителя = Найти(резСообщение,":");	
	Если индРазделителя>0 Тогда
		резСообщение = Сред(резСообщение,индРазделителя+2);	
	КонецЕсли;

	Возврат резСообщение;
КонецФункции

Функция ОбновитьПолеЗначения()
	
	текДанные = ЭлементыФормы.ПараметрыТаблица.ТекущаяСтрока;
	Если ТипЗнч(текДанные.ЗначениеПараметра) = Тип("СписокЗначений") Тогда
		текДанные.Тип = "Список";		
	КонецЕсли;
	//массивТипов = Новый Массив;
	//массивТипов.Добавить(ТипЗнч(текДанные.ЗначениеПараметра));	
	//ЭлементыФормы.ПараметрыТаблица.Колонки.ЗначениеПараметра.ЭлементУправления.ОграничениеТипа = Новый ОписаниеТипов(массивТипов);
	//Элементы.ПараметрыЗначениеПараметра.ВыбиратьТип = (текДанные.Тип = "Значение");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ ПАРАМЕТРОВ

// Обработчик события при начале редактирования строки параметров
//
Процедура ПараметрыПриНачалеРедактирования(Элемент, НоваяСтрока)
	
	текДанные = Элемент.ТекущаяСтрока;
	Если НоваяСтрока И ПустаяСтрока(текДанные.Тип) Тогда 
		текДанные.Тип = "Значение";
	КонецЕсли;
	Если НоваяСтрока И текДанные.Тип = "Таблица" Тогда
		текДанные.ДанныеЗначения = текДанные.ДанныеЗначения.Скопировать();	
	КонецЕсли;
	
	мТипДоИзменения = текДанные.Тип;
	
КонецПроцедуры // ПараметрыПриНачалеРедактирования()

// Обработчик события при окончании редактирования строки параметров
//
Процедура ПараметрыПриОкончанииРедактирования(Элемент, НоваяСтрока)

	ВладелецФормы.Модифицированность = Истина;

КонецПроцедуры // ПараметрыПриОкончанииРедактирования()

// Обработчик события перед удалением строки параметров
//
Процедура ПараметрыПередУдалением(Элемент, Отказ)

	Если Отказ Тогда Возврат; КонецЕсли;
	ВладелецФормы.Модифицированность = Истина;
	

КонецПроцедуры // ПараметрыПередУдалением()

// Обработчик нажатия кнопки командной панели "Дополнить из запроса"
//
Процедура КоманднаяПанельФормыПолучитьИзЗапроса(Кнопка)
	ТекстЗапроса = ВладелецФормы.ЭлементыФормы.ТекстЗапроса.ПолучитьТекст();
	
	Если ПустаяСтрока(ТекстЗапроса) Тогда
		Предупреждение("Отсутствует текст запроса.");
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Попытка
		ПараметрыЗапроса = Запрос.НайтиПараметры();
	Исключение
		Предупреждение(ОбрезатьСообщениеОбОшибке(ОписаниеОшибки()));
		Возврат;
	КонецПопытки;
	
	соотвПараметры = Новый Соответствие;
	Для каждого строкаПараметры Из ПараметрыТаблица Цикл
		соотвПараметры.Вставить(строкаПараметры,Истина);	
	КонецЦикла;
	
	Для каждого ПараметрЗапроса Из ПараметрыЗапроса Цикл
		ТипПараметра = ПараметрЗапроса.ТипЗначения;
		ИмяПараметра =  ПараметрЗапроса.Имя;
		массивНайдено = ПараметрыТаблица.НайтиСтроки(Новый Структура("ИмяПараметра",ИмяПараметра));
		Если массивНайдено.Количество()=0 Тогда
			СтрокаПараметров = ПараметрыТаблица.Добавить();
			СтрокаПараметров.ИмяПараметра = ИмяПараметра;
			СтрокаПараметров.Тип = "Значение";
			СтрокаПараметров.ЗначениеПараметра = ТипПараметра.ПривестиЗначение(Неопределено);			
		Иначе
			СтрокаПараметров = массивНайдено[0];
			соотвПараметры.Удалить(СтрокаПараметров);	
		КонецЕсли;
		Если ТипПараметра.СодержитТип(Тип("ТаблицаЗначений")) Тогда
			Если СтрокаПараметров.Тип <> "Таблица" Тогда
				СтрокаПараметров.Тип = "Таблица";
				СтрокаПараметров.ДанныеЗначения = Новый ТаблицаЗначений;
				СтрокаПараметров.ЗначениеПараметра = "ТаблицаЗначений(0)";
			КонецЕсли;
		Иначе
			Если СтрокаПараметров.Тип = "Таблица" Тогда
				СтрокаПараметров.Тип = "Значение";
				СтрокаПараметров.ДанныеЗначения = Неопределено;
				СтрокаПараметров.ЗначениеПараметра = ТипПараметра.ПривестиЗначение(Неопределено);
			Иначе
				Если ТипЗнч(СтрокаПараметров.ЗначениеПараметра)=Тип("СписокЗначений") Тогда
					списокДляЗамены = Новый СписокЗначений;
					списокДляЗамены.ТипЗначения = ТипПараметра;
					Для каждого элСпискаПараметра Из СтрокаПараметров.ЗначениеПараметра Цикл
						Если ТипПараметра.СодержитТип(ТипЗнч(элСпискаПараметра.Значение)) Тогда
							списокДляЗамены.Добавить(элСпискаПараметра.Значение);		
						КонецЕсли;
						СтрокаПараметров.ЗначениеПараметра = списокДляЗамены;
					КонецЦикла;
				Иначе
					СтрокаПараметров.ЗначениеПараметра = ТипПараметра.ПривестиЗначение(СтрокаПараметров.ЗначениеПараметра);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если соотвПараметры.Количество()>0 Тогда
		Ответ = Вопрос("Удалить неиспользуемые параметры?",РежимДиалогаВопрос.ДаНет);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			Для каждого элСоотвПараметры Из соотвПараметры Цикл
				ПараметрыТаблица.Удалить(элСоотвПараметры.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПараметрыТипПриИзменении(Элемент)
	
	текДанные = ЭлементыФормы.ПараметрыТаблица.ТекущаяСтрока;
	Если текДанные.Тип = "Таблица" Тогда
		Если мТипДоИзменения<>"Таблица" Тогда
			новТаблица = Новый ТаблицаЗначений;
			текДанные.ДанныеЗначения = новТаблица;
			текДанные.ЗначениеПараметра = "ТаблицаЗначений(0)";
		КонецЕсли;
	ИначеЕсли текДанные.Тип = "Список" Тогда
		Если мТипДоИзменения = "Таблица" Тогда
			текДанные.ДанныеЗначения = Неопределено;
			текДанные.ЗначениеПараметра = Новый СписокЗначений;
		ИначеЕсли Не ТипЗнч(текДанные.ЗначениеПараметра) = Тип("СписокЗначений") Тогда
			ЗначениеПараметра = текДанные.ЗначениеПараметра;
			НовыйСписокЗначений = Новый СписокЗначений;
			типы = новый массив;
			типы.Добавить(ТипЗнч(ЗначениеПараметра));
			НовыйСписокЗначений.ТипЗначения = Новый ОписаниеТипов(типы);
			текДанные.ЗначениеПараметра = НовыйСписокЗначений;			
			Если ЗначениеПараметра <> Неопределено Тогда
				текДанные.ЗначениеПараметра.Добавить(ЗначениеПараметра);
			КонецЕсли;
		КонецЕсли;
	Иначе
		Если мТипДоИзменения = "Таблица" Тогда
			текДанные.ДанныеЗначения = Неопределено;
			текДанные.ЗначениеПараметра = Неопределено;
		ИначеЕсли ТипЗнч(текДанные.ЗначениеПараметра) = Тип("СписокЗначений") Тогда
			Если текДанные.ЗначениеПараметра.Количество() <> 0 Тогда
				текДанные.ЗначениеПараметра = текДанные.ЗначениеПараметра[0].Значение;
			Иначе
				текДанные.ЗначениеПараметра = Неопределено;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	мТипДоИзменения = текДанные.Тип;
	
	ОбновитьПолеЗначения();

КонецПроцедуры


Процедура ПараметрыЗначениеПараметраПриИзменении(Элемент)
	ОбновитьПолеЗначения();
КонецПроцедуры

Процедура ПараметрыЗначениеПараметраНачалоВыбора(Элемент, СтандартнаяОбработка)
	текДанные = ЭлементыФормы.ПараметрыТаблица.ТекущаяСтрока;
	Если текДанные.Тип = "Таблица" Тогда
		СтандартнаяОбработка = Ложь;
		формаРедактирования = Обработка.ПолучитьФорму("ФормаВложеннойТаблицы", ЭтаФорма);
		формаРедактирования.РежимРедактирования = Истина;
		формаРедактирования.Заголовок = "Параметр: "+текДанные.ИмяПараметра;
		формаРедактирования.ВложеннаяТаблица = текДанные.ДанныеЗначения;
		формаРедактирования.ЭлементыФормы.ВложеннаяТаблица.СоздатьКолонки();
		формаРедактирования.ОткрытьМодально();
		текДанные.ЗначениеПараметра = "ТаблицаЗначений("+формаРедактирования.ВложеннаяТаблица.Количество()+")";
	КонецЕсли;
КонецПроцедуры

Процедура ПараметрыЗначениеПараметраОчистка(Элемент, СтандартнаяОбработка)
	текДанные = ЭлементыФормы.ПараметрыТаблица.ТекущаяСтрока;
	Если текДанные.Тип = "Таблица" Тогда
		СтандартнаяОбработка = Ложь;
		текДанные.ДанныеЗначения.Очистить();
		текДанные.ЗначениеПараметра = "ТаблицаЗначений(0)";
	КонецЕсли;
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	соотвПараметры = Новый Соответствие;
	массивОшибок = Новый Массив;
	Для каждого строкаПараметра Из ПараметрыТаблица Цикл
		Если соотвПараметры[строкаПараметра.ИмяПараметра]<>Неопределено Тогда
			номСтроки = ПараметрыТаблица.Индекс(строкаПараметра)+1;
			массивОшибок.Добавить("В строке "+номСтроки+" найден параметр с дублирующимся именем """
				+строкаПараметра.ИмяПараметра+"""");
		Иначе
			соотвПараметры[строкаПараметра.ИмяПараметра] = ПараметрыТаблица.Индекс(строкаПараметра);
		КонецЕсли;
	КонецЦикла;
	Если массивОшибок.Количество()>0 Тогда
		ОчиститьСообщения();
		Для каждого ошибка Из массивОшибок Цикл
			Сообщить(ошибка);	
		КонецЦикла;
		ответ = Вопрос("Обнаружено дублирование параметров, продолжить?",РежимДиалогаВопрос.ДаНет);
		Если ответ = КодВозвратаДиалога.Нет Тогда
			Отказ = Истина;	
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры




